* Permutation multiplication and inversion
* TAOCP Vol. 1 pp. 168-169, 177 by Donald Knuth
* Devices 16 and 18 deal with multiplication
* Device 19 prints the inverse of permutation stored at X

* Constants and locations
MAXWDS  EQU     1200                    Maximum length of input
PERM    ORIG    *+MAXWDS                The input permutation
ANS     ORIG    *+MAXWDS                Place for answer
OUTBUF  ORIG    *+24                    Place for printing
CARDS   EQU     16                      Unit number for card reader
PRINTER EQU     18                      Unit number for printer
TERM    EQU     19                      Unit number for terminal
START   CON     0
SIZE    CON     0
* DATA:
N       EQU     6                       Number of elements in permutation
X       CON     0
        CON     6                       Permutation to invert
        CON     2
        CON     1
        CON     5
        CON     4
        CON     3
* CODE:
        ORIG    3000
BEGIN   IN      PERM(CARDS)             Read first card.
        ENT2    0
        LDA     EQUALS
1H      JBUS    *(CARDS)                Wait for cycle complete.
        CMPA    PERM+15,2
        JE      *+2                     Is it the last card?
        IN      PERM+16,2(CARDS)        No, read another.
        ENT1    OUTBUF
        JBUS    *(PRINTER)              Print a copy of input card.
        MOVE    PERM,2(16)
        OUT     OUTBUF(PRINTER)
        JE      1F
        INC2    16
        CMP2    =MAXWDS-16=
        JLE     1B                      Repeat until input is complete.
        HLT     666                     Too much input!
1H      INC2    15                      At this point, rI2 words of
        ST2     SIZE                        input are in PERM, PERM + 1, ...
        ENT3    0                       A1. First pass.
2H      LDAN    PERM,3                      Get next element of input.
        CMPA    LPREN(1:5)                  Is it "("
        JNE     1F
        STA     PERM,3                          If so, tag it.
        INC3    1                           Put next nonblank symbol into rX.
        LDXN    PERM,3
        JXZ     *-2
1H      CMPA    RPREN(1:5)
        JNE     *+2
        STX     PERM,3                      Replace ")" by tagged rX.
        INC3    1
        CMP3    SIZE                        Have all elements been processed?
        JL      2B
        LDA     LPREN                       Prepare for main program.
        ENT1    ANS                         rI1 = place to store next answer.
OPEN    ENT3    0                       A2. Open.
1H      LDXN    PERM,3                      Look for untagged element.
        JXN     GO
        INC3    1
        CMP3    SIZE
        JL      1B
*                                       All are tagged. Now comes the output.
DONE    CMP1    =ANS=
        JNE     *+2                     Is answer the identity permutation?
        MOVE    LPREN(2)                    If so, change to "()"
        MOVE    =0=                     Put 23 blank words after answer.
        MOVE    -1,1(22)
        ENT3    0
        OUT     ANS,3(PRINTER)
        INC3    24
        LDX     ANS,3                   Print as many lines as necessary.
        JXNZ    *-3
* Begin inversion code (unrelated to multiplication)
* rI1 = m; rI2 = -i; rI3 = j; n = N
INVERT  ENT1    N                       I1. Initialise. m <- n.
        ENT3    -1                          j <- -1.
2H      LD2N    X,1                     I2. Next element. i <- X[m].
        J2P     5F                          To I5 if i < 0.
3H      ST3     X,1                     I3. Invert one. X[m] <- j.
        ENN3    0,1                         j <- -m.
        ENN1    0,2                         m <- i.
        LD2N    X,1                         i <- X[m].
4H      J2N     3B                      I4. End of cycle? To I3 if i > 0.
        ENN2    0,3                         Otherwise, set i <- j.
5H      ST2     X,1                     I5. Store final value. X[m] <- -i.
6H      DEC1    1                       I6. Loop on m.
        J1P     2B                          To I2 if m > 0.
        OUT     X(TERM)                 Print (for debugging)
        HLT
* End inversion code
LPREN   ALF     "    ("                 Constants used in the program
RPREN   ALF     ")    "
EQUALS  ALF     "    ="
*
GO      MOVE    LPREN                   Open a cycle in the output.
        MOVE    PERM,3
        STX     START
SUCC    STX     PERM,3                  Tag an element.
        INC3    1                       Move one step to the right.
        LDXN    PERM,3(1:5)             A3. Set CURRENT (rX).
        JXN     1F                          Skip past blanks.
        JMP     *-3
5H      STX     0,1                         Output CURRENT.
        INC1    1
        ENT3    0                           Scan formula again.
4H      CMPX    PERM,3(1:5)             A4. Scan formula.
        JE      SUCC                    Element = CURRENT?
1H      INC3    1                       Move to right.
        CMP3    SIZE                    End of formula?
        JL      4B
        CMPX    START(1:5)              A5. Current = START?
        JNE     5B
CLOSE   MOVE    RPREN                   A6. Close.
        CMPA    -3,1                        Note: rA = "(".
        JNE     OPEN
        INC1    -3                          Suppress singleton cycles.
        JMP     OPEN
        END     BEGIN
